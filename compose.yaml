services:
#  KAFKA
  broker:
    image: apache/kafka:latest
    container_name: kafka-broker
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 1
    ports:
      - '9292:9292'
    networks:
      - network-application
#  CONSUMER
  service-consumer:
    build:
      context: service-consumer/.
      dockerfile: Dockerfile
    container_name: consumer-application
    depends_on:
      - broker
    ports:
      - '8080:8080'
    networks:
      - network-application
#  PRODUCER
  service-producer:
    build:
      context: service-producer/.
      dockerfile: Dockerfile
    container_name: producer-application
    depends_on:
      - broker
    ports:
      - '9090:9090'
    networks:
      - network-application
#  NETWORKS
networks:
  network-application:
    driver: bridge